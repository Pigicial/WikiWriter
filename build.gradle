import dev.architectury.pack200.java.Pack200Adapter

plugins {
    id "java"
    id "gg.essential.loom" version "0.10.0.5"
    id "dev.architectury.architectury-pack200" version "0.1.3"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

sourceCompatibility = 8
targetCompatibility = 8

loom {
    launchConfigs {
        getByName("client") {
            arg "--tweakClass", "gg.essential.loader.stage0.EssentialSetupTweaker"
        }
        "client" {
            property("devauth.enabled", "true")
            arg "--tweakClass", "gg.essential.loader.stage0.EssentialSetupTweaker"
        }
    }
    forge {
        pack200Provider.set(new Pack200Adapter())
    }
}

version = "1.8"
group = "me.pigicial"
archivesBaseName = "WikiWriter"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

sourceSets {
    main {
        output.resourcesDir = java.classesDirectory
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    mavenLocal()

    maven { url = "https://jitpack.io/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }

    maven { url = "https://plugins.gradle.org/m2/" }
    maven { url = "https://repo.sk1er.club/repository/maven-public/" }
    maven { url = "https://repo.sk1er.club/repository/maven-releases/" }
    maven { url = "https://repo.essential.gg/repository/maven-public/" }

    maven {
        name "JitPack"
        url "https://jitpack.io"
    }

    maven {
        name "DevAuth"
        url "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraftVersion}"
    mappings "de.oceanlabs.mcp:mcp_stable:${project.mappings}"
    forge "net.minecraftforge:forge:${project.forgeVersion}"

    runtimeOnly "me.djtheredstoner:DevAuth-forge-legacy:1.1.2"

    implementation "gg.essential:essential-1.8.9-forge:1542"
    embed "gg.essential:loader-launchwrapper:1.1.3"

    annotationProcessor "com.google.guava:guava:21.0"
    annotationProcessor "org.apache.logging.log4j:log4j-core:2.0-beta9"

    annotationProcessor "com.google.code.gson:gson:2.8.6"

    compileOnly "org.projectlombok:lombok:1.18.12"
    annotationProcessor "org.projectlombok:lombok:1.18.12"
}

shadowJar {
    configurations = [project.configurations.embed]
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker"
    )

    exclude("dummyThing")
    exclude("META-INF/maven/")
    exclude("META-INF/nar/")
    exclude("module-info.class")
    exclude("META-INF/versions/")
    exclude("LICENSE.txt")
}

remapJar {
    from(tasks.shadowJar)
    input.set(tasks.shadowJar.archiveFile.get())

    archiveFileName = "${project.name}-${project.version}-for-MC-${project.minecraftVersion}.jar"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraftVersion

    filesMatching("mcmod.info") {
        expand "version": project.version
    }

    from(file("LICENSE"))
}