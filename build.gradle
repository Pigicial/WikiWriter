plugins {
    id 'java'
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id 'io.freefair.lombok' version '6.6.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    gradlePluginPortal()
    mavenCentral()
    mavenLocal()

    maven {
        name 'JitPack'
        url 'https://jitpack.io'
    }
    maven {
        name 'DevAuth'
        url 'https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1'
    }
}

version = "${mod_version}-for-MC-${minecraft_version}"
group = "me.pigicial"
archivesBaseName = "WikiWriter"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

sourceSets {
    main {
        output.resourcesDir = java.classesDirectory
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    maven { url = "https://repo.sk1er.club/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }

    maven { url = "https://plugins.gradle.org/m2/" }
    maven { url = "https://repo.sk1er.club/repository/maven-public/" }
    maven { url = "https://repo.sk1er.club/repository/maven-releases/" }
    maven { url = "https://repo.essential.gg/repository/maven-public/" }

    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }

    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }

    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }

    // for adventure development builds
    maven {
        name = "sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        mavenContent { snapshotsOnly() }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}"

    // used for text json conversion
    modImplementation include("net.kyori:adventure-platform-fabric:5.11.0-SNAPSHOT")
    modImplementation include("net.kyori:adventure-text-serializer-legacy:4.15.0")

    modRuntimeOnly "me.djtheredstoner:DevAuth-fabric:1.1.2"

    modApi "com.terraformersmc:modmenu:9.0.0"

    implementation 'com.google.code.gson:gson:2.10.1'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

/*
shadowJar {
    configurations = [project.configurations.embed]v
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker"
    )

    exclude("dummyThing")
    exclude("META-INF/maven/")
    exclude("META-INF/nar/")
    exclude("module-info.class")
    exclude("META-INF/versions/")
    exclude("LICENSE.txt")
}
 */

processResources {
    inputs.property "version", mod_version
    inputs.property "mcversion", minecraft_version

    filesMatching("fabric.mod.json") {
        expand "version": mod_version
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}